{"version":3,"sources":["components/PetCard.js","components/PetList.js","pages/HomePage.js","pages/PetDetails.js","App.js","reportWebVitals.js","index.js","components/PetCard.module.css","pages/PetDetails.module.css"],"names":["PetCard","props","to","pathname","index","state","animal","Card","className","styles","src","photos","medium","alt","name","Content","Header","Description","description","PetList","Group","centered","animals","map","initial_pets","HomePage","useState","token","setToken","pets","setPets","isLoading","setIsLoading","useEffect","axios","post","grant_type","client_id","process","client_secret","then","response","data","access_token","catch","error","console","get","headers","Authorization","log","length","Divider","hidden","PetDetails","useLocation","Segment","vertical","textAlign","as","Image","large","Label","species","colors","primary","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.918a5f28.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card} from 'semantic-ui-react'\r\nimport * as styles from \"./PetCard.module.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PetCard = (props) => {\r\n  return (\r\n    <Link to={{\r\n      pathname: `/pet/${props.index}`,\r\n      state: {\r\n        animal: props.animal\r\n      }\r\n    }\r\n      \r\n      }>\r\n      <Card className={styles.card}>\r\n        <img src={props.animal.photos[0].medium} alt={props.animal.name} className={styles.petImage}/>\r\n        <Card.Content>\r\n          <Card.Header className={styles.cardHeader}>{props.animal.name}</Card.Header>\r\n          <Card.Description>{props.animal.description}</Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </Link>\r\n    \r\n  )\r\n}\r\n\r\nexport default PetCard\r\n","import React from 'react'\r\nimport * as styles from \"./PetList.module.css\"\r\nimport { Card } from 'semantic-ui-react'\r\nimport PetCard from '../components/PetCard';\r\n\r\nconst PetList = (props) => {\r\n  return (\r\n    <Card.Group centered>\r\n        {props.animals.map((animal, index) => {\r\n        return (\r\n          <Card>\r\n            <PetCard \r\n            index={index}\r\n            animal={animal}\r\n          />\r\n          </Card>\r\n          \r\n        \r\n        )\r\n      })}\r\n      </Card.Group>\r\n  )\r\n}\r\n\r\nexport default PetList\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport PetList from '../components/PetList';\r\nimport { Divider } from 'semantic-ui-react';\r\n\r\nconst initial_pets = {\r\n  animals: [\r\n  ]\r\n}\r\n\r\nconst HomePage = () => {\r\n  const [token, setToken] = useState('Fake Token');\r\n  const [pets, setPets] = useState(initial_pets);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Get the token used for authentication\r\n  useEffect(() => {\r\n    const body = {\r\n      grant_type: 'client_credentials',\r\n      client_id: process.env.REACT_APP_API_KEY_ID,\r\n      client_secret: process.env.REACT_APP_API_KEY_SECRET\r\n    };\r\n    axios.post('https://api.petfinder.com/v2/oauth2/token', body)\r\n      .then(response => {\r\n        setToken(response.data.access_token);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the token!', error);\r\n    });\r\n  }, [])\r\n\r\n  // use a GET request to get the animals after we receive the token\r\n  useEffect(() => {\r\n    if (token !== 'Fake Token') {\r\n      axios.get(`https://api.petfinder.com/v2/animals?type=rabbit&location=Raleigh, NC&page=1`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(response => {\r\n          setPets(response.data)\r\n          setIsLoading(false)\r\n        })\r\n        .catch(error => {\r\n          console.log('There was an error getting the pets data!', error);\r\n      })\r\n    }\r\n  }, [token])\r\n\r\n  if (!isLoading && pets.animals.length > 0) {\r\n    return (\r\n      <>\r\n      <Divider hidden></Divider>\r\n      <PetList animals={pets.animals}/>\r\n      </>\r\n    )\r\n  }\r\n  return <h1>Loading...</h1>\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Header, Label, Segment, Image } from 'semantic-ui-react'\r\nimport * as styles from \"./PetDetails.module.css\"\r\n\r\nconst PetDetails = () => {\r\n\r\n  const location = useLocation()\r\n  const { animal } = location.state\r\n\r\n  return (\r\n    <Segment vertical textAlign='center' className={styles.container}>\r\n      <Header as='h1'>{animal.name}</Header>\r\n      <Image src={animal.photos[0].large} className={styles.mainImage} alt={animal.name} centered></Image>\r\n      <Label.Group>\r\n        {animal.species &&\r\n          <Label>\r\n            {animal.species}\r\n          </Label>\r\n        }\r\n        \r\n        {animal.colors.primary &&\r\n          <Label>\r\n            {animal.colors.primary}\r\n          </Label>\r\n        }\r\n        \r\n      </Label.Group>\r\n      \r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default PetDetails\r\n","import './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport HomePage from './pages/HomePage';\nimport PetDetails from \"./pages/PetDetails\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nfunction App() {\n\n  return (\n    <>\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/pet/:petID\" component={PetDetails} />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"petImage\":\"PetCard_petImage__3kk0Q\",\"cardHeader\":\"PetCard_cardHeader__1LLed\",\"card\":\"PetCard_card__1UuGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"PetDetails_imageContainer__ucwx7\",\"mainImage\":\"PetDetails_mainImage__3eMuD\",\"container\":\"PetDetails_container__2VIJ5\"};"],"sourceRoot":""}