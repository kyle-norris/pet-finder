{"version":3,"sources":["components/PetCard.js","components/PetList.js","pages/HomePage.js","pages/PetDetailsPage.js","App.js","reportWebVitals.js","index.js","pages/PetDetailsPage.module.css","components/PetCard.module.css"],"names":["PetCard","props","to","pathname","index","state","animalID","animal","id","token","Card","className","styles","src","photos","medium","alt","name","Content","Header","Description","description","PetList","Group","centered","animals","map","initial_pets","petTypes","HomePage","useState","setToken","pets","setPets","isLoading","setIsLoading","location","petType","useEffect","axios","post","grant_type","client_id","process","client_secret","then","response","data","access_token","catch","error","console","get","headers","Authorization","log","length","Divider","hidden","PetDetails","setAnimal","useLocation","Segment","vertical","textAlign","as","status","Image","large","Label","tags","tag","color","Container","section","Table","definition","Body","Row","Cell","width","species","breeds","primary","colors","gender","age","attributes","spayed_neutered","house_trained","declawed","special_needs","shots_current","App","exact","path","component","PetDetailsPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.04ed79b5.chunk.js","sourcesContent":["import React from 'react'\nimport {Card} from 'semantic-ui-react'\nimport * as styles from \"./PetCard.module.css\"\nimport { Link } from \"react-router-dom\";\n\nconst PetCard = (props) => {\n  return (\n    <Link to={{\n      pathname: `/pet/${props.index}`,\n      state: {\n        animalID: props.animal.id,\n        token: props.token\n      }\n    }\n      \n      }>\n      <Card className={styles.card}>\n        <img src={props.animal.photos[0].medium} alt={props.animal.name} className={styles.petImage}/>\n        <Card.Content>\n          <Card.Header className={styles.cardHeader}>{props.animal.name}</Card.Header>\n          <Card.Description>{props.animal.description}</Card.Description>\n        </Card.Content>\n      </Card>\n    </Link>\n    \n  )\n}\n\nexport default PetCard\n","import React from 'react'\nimport * as styles from \"./PetList.module.css\"\nimport { Card } from 'semantic-ui-react'\nimport PetCard from '../components/PetCard';\n\nconst PetList = (props) => {\n  return (\n    <Card.Group centered>\n        {props.animals.map((animal, index) => {\n        return (\n          <Card key={index}>\n            <PetCard \n            animal={animal}\n            token={props.token}\n          />\n          </Card>\n          \n        \n        )\n      })}\n      </Card.Group>\n  )\n}\n\nexport default PetList\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport PetList from '../components/PetList';\nimport { Divider } from 'semantic-ui-react';\n\n// Used for initial rendering\nconst initial_pets = {\n  animals: [\n  ]\n}\n\n// Pet Types\nconst petTypes = ['Rabbit', 'Dog', 'Cat', 'Horse', 'Bird', 'Scales, Fins & Other', 'Barnyard']\n\n\nconst HomePage = () => {\n  const [token, setToken] = useState('Fake Token');\n  const [pets, setPets] = useState(initial_pets);\n  const [isLoading, setIsLoading] = useState(true);\n  const [location, setLocation] = useState('Raleigh, NC')\n  const [petType, setPetType] = useState(petTypes[0])\n\n  // Get the token used for authentication\n  useEffect(() => {\n    const body = {\n      grant_type: 'client_credentials',\n      client_id: process.env.REACT_APP_API_KEY_ID,\n      client_secret: process.env.REACT_APP_API_KEY_SECRET\n    };\n    axios.post('https://api.petfinder.com/v2/oauth2/token', body)\n      .then(response => {\n        setToken(response.data.access_token);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('There was an error fetching the token!', error);\n    });\n  }, [])\n\n  // use a GET request to get the animals after we receive the token\n  useEffect(() => {\n    if (token !== 'Fake Token') {\n      axios.get(`https://api.petfinder.com/v2/animals?type=${petType}&location=${location}&page=1`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => {\n          setPets(response.data)\n          setIsLoading(false)\n        })\n        .catch(error => {\n          console.log('There was an error getting the pets data!', error);\n      })\n    }\n  }, [token, location, petType])\n\n  if (!isLoading && pets.animals.length > 0) {\n    return (\n      <>\n      <Divider hidden></Divider>\n      <PetList animals={pets.animals} token={token}/>\n      </>\n    )\n  }\n  return <h1>Loading...</h1>\n}\n\nexport default HomePage\n","import React, {useEffect, useState} from 'react'\nimport { useLocation } from 'react-router'\nimport { Header, Segment, Image, Divider, Table, Label, Container } from 'semantic-ui-react'\nimport * as styles from \"./PetDetailsPage.module.css\"\nimport axios from 'axios';\n\nconst PetDetails = () => {\n\n  const [animal, setAnimal] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const location = useLocation()\n  const { animalID, token } = location.state\n\n  useEffect(() => {\n    if (token !== 'Fake Token') {\n      axios.get(`https://api.petfinder.com/v2/animals/${animalID}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => {\n          setAnimal(response.data.animal)\n          setIsLoading(false)\n          console.log(response.data.animal)\n        })\n        .catch(error => {\n          console.log('There was an error getting the pet details!', error);\n      })\n    }\n  }, [animalID, token])\n\n  if (isLoading === false) {\n      return (\n      <Segment vertical textAlign='center' className={styles.container}>\n        <Header as='h1'>{animal.name} ({animal.status})</Header>\n        <Image src={animal.photos[0].large} className={styles.mainImage} alt={animal.name} centered></Image>\n\n        <Divider hidden />\n\n        <Label.Group>\n          {animal.tags.map((tag, index) => {\n            return(\n              <Label color='blue' key={index}>\n                {tag}\n              </Label>\n            )\n          })}\n        </Label.Group>\n\n        <Divider hidden />\n\n        <Container>\n          {animal.description}\n        </Container>\n\n\n        <Divider hidden section>\n          <Header>\n            Details\n          </Header>\n        </Divider>\n\n        <div className={styles.tableContainer}>\n          <Table definition textAlign='center' className={styles.table}>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell width={6}>Species</Table.Cell>\n                <Table.Cell>{animal.species}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Primary Breed</Table.Cell>\n                <Table.Cell>{animal.breeds.primary}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Color</Table.Cell>\n                <Table.Cell>{animal.colors.primary}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Gender</Table.Cell>\n                <Table.Cell>{animal.gender}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Age</Table.Cell>\n                <Table.Cell>{animal.age}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n\n        <Divider hidden section>\n          <Header>\n            Health\n          </Header>\n        </Divider>\n\n        <div className={styles.tableContainer}>\n          <Table definition textAlign='center' className={styles.table}>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell width={6}>Spayed/Neutered</Table.Cell>\n                <Table.Cell>{animal.attributes.spayed_neutered ? 'yes' : 'no'}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>House Trained</Table.Cell>\n                <Table.Cell>{animal.attributes.house_trained ? 'yes' : 'no'}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Declawed</Table.Cell>\n                <Table.Cell>{animal.attributes.declawed ? 'yes' : 'no'}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Special Needs</Table.Cell>\n                <Table.Cell>{animal.attributes.special_needs ? 'yes' : 'no'}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>Shots Current</Table.Cell>\n                <Table.Cell>{animal.attributes.shots_current ? 'yes' : 'no'}</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n        \n        \n      </Segment>\n    )\n  } else {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n  \n}\n\nexport default PetDetails\n","import './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport HomePage from './pages/HomePage';\nimport PetDetailsPage from \"./pages/PetDetailsPage\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nfunction App() {\n\n  return (\n    <>\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/pet/:petID\" component={PetDetailsPage} />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"PetDetailsPage_imageContainer__1tPZ6\",\"mainImage\":\"PetDetailsPage_mainImage__27wu8\",\"container\":\"PetDetailsPage_container__2IgPE\",\"table\":\"PetDetailsPage_table__bFyXx\",\"tableContainer\":\"PetDetailsPage_tableContainer__10Dsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"petImage\":\"PetCard_petImage__IT8ha\",\"cardHeader\":\"PetCard_cardHeader__wRx2B\",\"card\":\"PetCard_card__1eoGb\"};"],"sourceRoot":""}