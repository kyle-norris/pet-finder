{"version":3,"sources":["components/PetCard.module.css","components/PetCard.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PetCard","props","Card","src","image","alt","name","height","className","styles","Content","Header","Description","description","initial_pets","animals","HomePage","useState","token","setToken","pets","setPets","isLoading","setIsLoading","useEffect","axios","post","grant_type","client_id","process","client_secret","then","response","data","access_token","catch","error","console","get","headers","Authorization","log","length","map","animal","index","photos","medium","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,SAAW,4B,mMCgBdC,EAbC,SAACC,GACf,OACE,eAACC,EAAA,EAAD,WAEE,qBAAKC,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMK,KAAMC,OAAQ,IAAKC,UAAWC,aAChE,eAACP,EAAA,EAAKQ,QAAN,WACE,cAACR,EAAA,EAAKS,OAAN,UAAcV,EAAMK,OACpB,cAACJ,EAAA,EAAKU,YAAN,UAAmBX,EAAMY,qBCL3BC,EAAe,CACnBC,QAAS,IA+DIC,EA3DE,WACf,MAA0BC,mBAAS,cAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAASH,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAqCA,OAlCAC,qBAAU,WAMRC,IAAMC,KAAK,4CALE,CACXC,WAAY,qBACZC,UAAWC,GACXC,cAAeD,KAGdE,MAAK,SAAAC,GACJb,EAASa,EAASC,KAAKC,cACvBX,GAAa,MAEdY,OAAM,SAAAC,GACLC,QAAQD,MAAM,yCAA0CA,QAE3D,IAGHZ,qBAAU,WACM,eAAVN,GACFO,IAAMa,IAAN,+EAA0F,CACxFC,QAAS,CACPC,cAAc,UAAD,OAAYtB,MAG1Ba,MAAK,SAAAC,GACJX,EAAQW,EAASC,MACjBV,GAAa,MAEdY,OAAM,SAAAC,GACLC,QAAQI,IAAI,4CAA6CL,QAG9D,CAAClB,KAECI,GAAaF,EAAKL,QAAQ2B,OAAS,EAEpC,mCACCtB,EAAKL,QAAQ4B,KAAI,SAACC,EAAQC,GACzB,OACE,cAAC,EAAD,CACEvC,KAAMsC,EAAOtC,KACbF,MAAOwC,EAAOE,OAAO,GAAGC,OACxBlC,YAAa+B,EAAO/B,mBAQvB,6C,MClDMmC,MAXf,WAEE,OACE,mCACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnC,SCCxBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.688fa8a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"petImage\":\"PetCard_petImage__IT8ha\"};","import React from 'react'\nimport {Card} from 'semantic-ui-react'\nimport * as styles from \"./PetCard.module.css\"\n\nconst PetCard = (props) => {\n  return (\n    <Card\n    >\n      <img src={props.image} alt={props.name} height={200} className={styles.petImage}/>\n      <Card.Content>\n        <Card.Header>{props.name}</Card.Header>\n        <Card.Description>{props.description}</Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default PetCard\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport PetCard from '../components/PetCard';\nimport { Link } from \"react-router-dom\";\n\nconst initial_pets = {\n  animals: [\n  ]\n}\n\nconst HomePage = () => {\n  const [token, setToken] = useState('Fake Token');\n  const [pets, setPets] = useState(initial_pets);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Get the token used for authentication\n  useEffect(() => {\n    const body = {\n      grant_type: 'client_credentials',\n      client_id: process.env.REACT_APP_API_KEY_ID,\n      client_secret: process.env.REACT_APP_API_KEY_SECRET\n    };\n    axios.post('https://api.petfinder.com/v2/oauth2/token', body)\n      .then(response => {\n        setToken(response.data.access_token);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('There was an error fetching the token!', error);\n    });\n  }, [])\n\n  // use a GET request to get the animals\n  useEffect(() => {\n    if (token !== 'Fake Token') {\n      axios.get(`https://api.petfinder.com/v2/animals?type=rabbit&location=Raleigh, NC&page=1`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => {\n          setPets(response.data)\n          setIsLoading(false)\n        })\n        .catch(error => {\n          console.log('There was an error getting the pets data!', error);\n      })\n    }\n  }, [token])\n\n  if (!isLoading && pets.animals.length > 0) {\n    return (\n      <>\n      {pets.animals.map((animal, index) => {\n        return (\n          <PetCard \n            name={animal.name}\n            image={animal.photos[0].medium}\n            description={animal.description}\n          />\n        \n        )\n      })}\n      </>\n    )\n  }\n  return <h1>Loading...</h1>\n}\n\nexport default HomePage\n","import './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport HomePage from './pages/HomePage';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nfunction App() {\n\n  return (\n    <>\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}